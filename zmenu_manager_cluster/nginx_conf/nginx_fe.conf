# fuori da http/server, in cima:
pid /tmp/nginx.pid;

# opzionale ma consigliato per FS read-only:
error_log /dev/stderr;

# user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {

  access_log /dev/stdout;

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Performance di base
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;

  # Gzip (opzionale ma utile per React build)
  gzip on;
  gzip_comp_level 5;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml application/octet-stream image/svg+xml;

  server {
    # Con immagine unprivileged usiamo 8080, non 80
    listen 8080;

    # Cartella con i file build di React
    root   /usr/share/nginx/html;
    index  index.html;

    # Cache aggressiva per asset fingerprinted (React build produce hash nel nome)
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      try_files $uri =404;
    }

    # API reverse proxy: aggiorna l'URL per ambiente nella ConfigMap
    location /api/ {
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Esempio: backend nel namespace
      proxy_pass http://backend:8080/;
    }

    # SPA fallback: qualsiasi rotta client-side torna index.html
    location / {
      try_files $uri /index.html;
    }
  }
}