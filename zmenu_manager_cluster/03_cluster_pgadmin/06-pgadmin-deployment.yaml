apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      # Compatibile con PodSecurity/SCC "restricted"
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: pgadmin
          # Immagine UBI friendly per OpenShift (consigliata)
          image: registry.developers.crunchydata.com/crunchydata/crunchy-pgadmin4:ubi9-9.2-2534
          imagePullPolicy: IfNotPresent
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: PGADMIN_DEFAULT_PASSWORD
            - name: PGADMIN_CONFIG_CONSOLE_LOG_LEVEL
              value: '10'
            - name: PGADMIN_DISABLE_POSTFIX
              value: '1'
            # - name: PGADMIN_LISTEN_PORT
            #   value: "5050"
            # Se monti la ConfigMap dei server
            # - name: PGADMIN_SERVER_JSON_FILE
            #   value: "/pgadmin4/servers.json"
          ports:
            - name: http
              containerPort: 5050
          readinessProbe:
            httpGet: { path: "/", port: http }
          livenessProbe:
            httpGet: { path: "/", port: http }
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - name: data
              mountPath: /var/lib/pgadmin      # Dati/sessions (EFFIMERI)
            - name: logs
              mountPath: /var/log/pgadmin      # Log (EFFIMERI)
            - name: run-httpd
              mountPath: /run/httpd
            # - name: servers
            #   mountPath: /pgadmin4/servers.json
            #   subPath: servers.json
            #   readOnly: true
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          # livenessProbe:
            # httpGet:
            #   path: /
            #   port: http
            # initialDelaySeconds: 30
            # periodSeconds: 20
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            # capabilities:
            #   drop: ["ALL"]
      volumes:
        - name: data
          emptyDir: {}         # <â€” Niente PVC: storage effimero su nodo
        - name: logs
          emptyDir: {}
        - name: run-httpd
          emptyDir: {}
        # - name: servers
        #   configMap:
        #     name: pgadmin-servers
            # Se non vuoi pre-caricare server, puoi commentare tutta questa volumeSource

